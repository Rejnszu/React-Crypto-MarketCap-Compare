{"version":3,"sources":["Components/DisplayData/CryptoDataCard.module.css","Components/DisplayData/CardContent.module.css","Components/UI/CryptoCard.module.css","Components/Functionality/CryptoInput.module.css","Components/DisplayData/CryptoComparison.module.css","Components/UI/CryptoCard.js","Components/DisplayData/CryptoDataCard.js","Components/Functionality/CryptoInput.js","Components/DisplayData/CryptoComparison.js","Components/DisplayData/CardContent.js","App.js","index.js"],"names":["module","exports","CryptoCard","props","className","styles","children","CryptoDataCard","cryptoInformation","name","symbol","price_usd","market_cap_usd","CryptoInput","useState","cryptoList","setCryptoList","helper","setHelper","useEffect","fetch","then","response","json","data","information","htmlFor","id","onChange","e","firstCryptoData","target","selectedIndex","Math","random","map","secondCryptoData","CryptoComparison","firstComparedCrypto","secondComparedCrypto","CardContent","firstCrypto","setFirstCrypto","secondCrypto","setSecondCrypto","card","value","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6e47ec84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card__crypto\":\"CryptoDataCard_card__crypto__1AzQ7\",\"crypto__text\":\"CryptoDataCard_crypto__text__2VyFH\",\"crypto__img\":\"CryptoDataCard_crypto__img__3V20Q\",\"crypto__name\":\"CryptoDataCard_crypto__name__3ObAQ\",\"crypto__symbol\":\"CryptoDataCard_crypto__symbol__a9qoO\",\"crypto__price\":\"CryptoDataCard_crypto__price__2jt4y\",\"crypto__market-price\":\"CryptoDataCard_crypto__market-price__3f8nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardContent_card__1vmmL\",\"card__title\":\"CardContent_card__title__2li2s\",\"card__wrapper\":\"CardContent_card__wrapper__kZEXz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"crypto-card\":\"CryptoCard_crypto-card__3BlzC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"information\":\"CryptoInput_information__37Oji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card__comparison\":\"CryptoComparison_card__comparison__3vEMd\"};","import React from \"react\";\r\nimport styles from \"./CryptoCard.module.css\";\r\n\r\nfunction CryptoCard(props) {\r\n  return (\r\n    <div className={`${styles[\"crypto-card\"]} ${props.className}`}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CryptoCard;\r\n","import React from \"react\";\r\nimport styles from \"./CryptoDataCard.module.css\";\r\nconst CryptoDataCard = (props) => {\r\n  return (\r\n    <div className={styles[\"card__crypto\"]}>\r\n      <img className={styles[\"crypto__img\"]} />\r\n      <p className={(styles[\"crypto__name\"], styles[\"crypto__text\"])}>\r\n        Name: {props.cryptoInformation?.name}\r\n      </p>\r\n      <p className={(styles[\"crypto__symbol\"], styles[\"crypto__text\"])}>\r\n        Symbol: {props.cryptoInformation?.symbol}\r\n      </p>\r\n      <p className={(styles[\"crypto__price\"], styles[\"crypto__text\"])}>\r\n        Price: {props.cryptoInformation?.price_usd}\r\n      </p>\r\n      <p className={(styles[\"crypto__market-cap\"], styles[\"crypto__text\"])}>\r\n        Market cap: {props.cryptoInformation?.market_cap_usd}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoDataCard;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport styles from \"./CryptoInput.module.css\";\r\nfunction CryptoInput(props) {\r\n  const [cryptoList, setCryptoList] = useState();\r\n  const [helper, setHelper] = useState();\r\n\r\n  function fetchCryptoData() {\r\n    return fetch(\"https://api.coinlore.net/api/tickers/\")\r\n      .then((response) => response.json())\r\n      .then((data) => setCryptoList(data));\r\n  }\r\n  useEffect(() => {\r\n    fetchCryptoData();\r\n  }, [helper]);\r\n\r\n  function addFirstCrypto(e) {\r\n    props.firstCryptoData(cryptoList?.data[e.target.selectedIndex]);\r\n    setHelper(Math.random());\r\n  }\r\n  function addSecondCrypto(e) {\r\n    props.secondCryptoData(cryptoList?.data[e.target.selectedIndex]);\r\n    setHelper(Math.random());\r\n  }\r\n  return (\r\n    <div className={styles.information}>\r\n      <div>\r\n        <label htmlFor=\"firstCrypto\">Select first cryptocurrency:</label>\r\n        <select id=\"firstCrypto\" onChange={addFirstCrypto}>\r\n          {cryptoList?.data.map((data) => {\r\n            return <option key={data.id}>{data.symbol}</option>;\r\n          })}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"secondCrypto\">Select second cryptocurrency:</label>\r\n        <select id=\"secondCrypto\" onChange={addSecondCrypto}>\r\n          {cryptoList?.data.map((data) => {\r\n            return <option key={data.id}>{data.symbol}</option>;\r\n          })}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CryptoInput;\r\n","import React from \"react\";\r\nimport styles from \"./CryptoComparison.module.css\";\r\n\r\nconst CryptoComparison = (props) => {\r\n  return (\r\n    <div className={styles[\"card__comparison\"]}>\r\n      <p>\r\n        If the market cap of{\" \"}\r\n        <span> {props.firstComparedCrypto?.name ?? \"CUR1\"}</span> was at the\r\n        market cap of <span> {props.secondComparedCrypto?.name ?? \"CUR2\"}</span>\r\n        , its price will be\r\n        <span>\r\n          {props.secondComparedCrypto\r\n            ? +props.secondComparedCrypto?.market_cap_usd /\r\n              +props.firstComparedCrypto?.market_cap_usd\r\n            : \"0\"}\r\n        </span>{\" \"}\r\n        times{\" \"}\r\n        {+props.secondComparedCrypto?.market_cap_usd >\r\n        +props.firstComparedCrypto?.market_cap_usd\r\n          ? \"bigger\"\r\n          : \"smaller\"}\r\n        : meaning\r\n        <span>\r\n          {props.secondComparedCrypto\r\n            ? (+props.secondComparedCrypto?.market_cap_usd /\r\n                +props.firstComparedCrypto?.market_cap_usd) *\r\n              +props.firstComparedCrypto?.price_usd\r\n            : \"0\"}\r\n        </span>{\" \"}\r\n        USD.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoComparison;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./CardContent.module.css\";\r\nimport CryptoDataCard from \"./CryptoDataCard\";\r\nimport CryptoInput from \"../Functionality/CryptoInput\";\r\nimport CryptoComparison from \"./CryptoComparison\";\r\nfunction CardContent(props) {\r\n  const [firstCrypto, setFirstCrypto] = useState();\r\n  const [secondCrypto, setSecondCrypto] = useState();\r\n\r\n  function getFirstCryptoData(value) {\r\n    setFirstCrypto(value);\r\n  }\r\n  function getSecondCryptoData(value) {\r\n    setSecondCrypto(value);\r\n  }\r\n  return (\r\n    <div className={styles.card}>\r\n      <h1 className={styles[\"card__title\"]}>Compare Crypto</h1>\r\n      <CryptoInput\r\n        firstCryptoData={getFirstCryptoData}\r\n        secondCryptoData={getSecondCryptoData}\r\n      />\r\n      <div className={styles[\"card__wrapper\"]}>\r\n        <CryptoDataCard cryptoInformation={firstCrypto} />\r\n        <CryptoDataCard cryptoInformation={secondCrypto} />\r\n      </div>\r\n\r\n      <CryptoComparison\r\n        firstComparedCrypto={firstCrypto}\r\n        secondComparedCrypto={secondCrypto}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardContent;\r\n","import React from \"react\";\nimport CryptoCard from \"./Components/UI/CryptoCard\";\nimport CardContent from \"./Components/DisplayData/CardContent\";\nfunction App() {\n  return (\n    <div>\n      <CryptoCard>\n        <CardContent />\n      </CryptoCard>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}